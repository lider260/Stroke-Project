import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import axes3d
import seaborn as sns



from sklearn.preprocessing import scale
import sklearn.linear_model as skl_lm
from sklearn.metrics import mean_absolute_error, r2_score
import statsmodels.api as sm
import statsmodels.formula.api as smf


data = pd.read_csv('C:/Users/Derek/Documents/stroke.csv')
data_clean = data.dropna()
regr = skl_lm.LinearRegression()

#Linear Fit
X = data_clean.age.values.reshape(-1,1)
y = data_clean.bmi
regr.fit(X,y)
data_clean['pred1'] = regr.predict(X)
data_clean['resid1'] = data_clean.bmi - data_clean.pred1

#Quadratic Fit
data_clean['age2'] = data_clean['age'] **2
X2 = data_clean[['age', 'age2']].to_numpy()
regr.fit(X2,y)

data_clean['pred2'] = regr.predict(X2)
data_clean['resid2'] = data_clean.bmi - data_clean.pred2
print(data_clean.head(3))

#Plotting the plots
fig, (ax1,ax2) = plt.subplots(1,2, figsize=(12,5))

# Left plot
sns.regplot(data_clean.pred1, data_clean.resid1, lowess=True,
            ax=ax1, line_kws={'color':'r', 'lw':1},
            scatter_kws={'facecolors':'None', 'edgecolors':'k', 'alpha':0.5})
ax1.hlines(0,xmin=ax1.xaxis.get_data_interval()[0],
           xmax=ax1.xaxis.get_data_interval()[1], linestyles='dotted')
ax1.set_title('Residual Plot for Linear Fit')

# Right plot
sns.regplot(data_clean.pred2, data_clean.resid2, lowess=True,
            line_kws={'color':'r', 'lw':1}, ax=ax2,
            scatter_kws={'facecolors':'None', 'edgecolors':'k', 'alpha':0.5})
ax2.hlines(0,xmin=ax2.xaxis.get_data_interval()[0],
           xmax=ax2.xaxis.get_data_interval()[1], linestyles='dotted')
ax2.set_title('Residual Plot for Quadratic Fit')

for ax in fig.axes:
    ax.set_xlabel('Fitted values')
    ax.set_ylabel('Residuals')
plt.show()
